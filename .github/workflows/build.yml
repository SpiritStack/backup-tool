name: Build and Release

on:
  push:
    tags: ['v*']

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller==5.13.0
        pip install -r requirements.txt
    
    - name: Build executable
      run: |
        pyinstaller --onefile --name backup-tool-${{ runner.os }} backup_tool/cli.py
        mkdir dist/backup-tool-${{ runner.os }}
        mv dist/backup-tool-${{ runner.os }}* dist/backup-tool-${{ runner.os }}/
    
    # macOS App Bundle Creation
    - name: Create macOS app bundle
      if: matrix.os == 'macos-latest'
      run: |
        mkdir -p BackupTool.app/Contents/MacOS
        mkdir -p BackupTool.app/Contents/Resources
        cp macos/Info.plist BackupTool.app/Contents/
        cp dist/backup-tool-macos-latest/backup-tool-macos-latest BackupTool.app/Contents/MacOS/backup-tool
        chmod +x BackupTool.app/Contents/MacOS/backup-tool
        
        # Create ZIP package
        mkdir -p dist/backup-tool-macos-app
        zip -r dist/backup-tool-macos-app/BackupTool.zip BackupTool.app
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backup-tool-${{ runner.os }}
        path: |
          dist/backup-tool-${{ runner.os }}
          ${{ matrix.os == 'macos-latest' && 'dist/backup-tool-macos-app' || '' }}
    
    # Windows Installer Creation
    - name: Create Windows installer
      if: matrix.os == 'windows-latest'
      run: |
        choco install nsis -y
        makensis installer.nsi
        mkdir dist/backup-tool-windows-installer
        mv BackupTool-Installer.exe dist/backup-tool-windows-installer/
    
    - name: Upload Windows installer
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: backup-tool-windows-installer
        path: dist/backup-tool-windows-installer

  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
    
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/backup-tool-ubuntu-latest/backup-tool-ubuntu-latest
          dist/backup-tool-macos-latest/backup-tool-macos-latest
          dist/backup-tool-macos-app/BackupTool.zip
          dist/backup-tool-windows-latest/backup-tool-windows-latest.exe
          dist/backup-tool-windows-installer/BackupTool-Installer.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}